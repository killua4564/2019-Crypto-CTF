from sympy import root
from Crypto.Util.number import *

def f(x, sta, now):
	n = x[now:].find("0") + now
	if now - 1 == n: return
	y = x[:now] + sta + x[now+1:]
	t = long_to_bytes(int(y))
	if b"CCTF" in t: print(t)
	f(x, sta, n+1)
	f(y, sta, n+1)

# x - y, x + y
x = 55688051329276209158629616529151192055025646561705871786541252311612206256075409268964010965466983425688869412582103065844311941449418979643816220043677552493942508720879225766764091444497900590293818591857294265711756341741628646876367485881958308287233533344764236224049102
y = 69190260306288978339050977407035083644778247764945306764156900887854520481999652058760332985464811209439989757703438650513857873454169836287727668975248718567859201739917145994476350439430002816194907557441344087744129328521851711107645145482862861140859632619115308584677692
x, y = (x + y) // 2, (y - x) // 2

a = []
while x != 1 and y != 0:
	t = int(root(x // y, 2))
	x, y = y, x - y * t ** 2
	a.append(t)

flag = ''.join(map(str, a))
flag = long_to_bytes(int(flag.replace("75179", "0")))
print(flag.decode())